searchState.loadedDescShard("anyscript_compiler", 0, "Struktur, die eine Shebang-Zeile und die zugehörigen …\nReturns the argument unchanged.\nGibt die Interpreter-Zeile zurück.\nGibt die Pfad-Zeile zurück.\nGibt die Pfad-Zeile zurück.\nGibt die Shebang-Zeile zurück.\nDie Interpreter-Zeile.\nCalls <code>U::from(self)</code>.\nErstellt eine neue <code>ReadShebang</code>-Instanz.\nDie Pfad-Zeile.\nDie Shebang-Zeile.\nReturns the argument unchanged.\nCreate a New Instance from a CString\nCreate a New Instance from a Lynch CString\nCreate a New Instance from a Lynch String\nCreate a New Instance from a String\nCalls <code>U::from(self)</code>.\nCreate a New Instance, this is a instance without content, …\nDict\nList data type\nTuple type for the lexer\nClass to Handle a Dictionary\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nConvert from String\nCalls <code>U::from(self)</code>.\nCreate a new instance of the class\nReset the class\nConvert to an CString\nConvert Floating to Int, with Optional set to 32 bit or 64 …\nConvert to String\nCheck Valid\nReturns the argument unchanged.\nConvert from String\nCalls <code>U::from(self)</code>.\nCreate a new instance of the class\nReset the class\nConvert to an CString\nConvert Integral to Float, with Optional set to 32 bit or …\nConvert to String\nCheck Valid\nClass to Handle a List\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a new tuple with default values\nSet the first value\nSet the second value")